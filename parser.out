Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> PRINT expression
Rule 2     statement -> <empty>
Rule 3     statement -> VARNAME EQUALS expression
Rule 4     expression -> VARNAME
Rule 5     expression -> NUMBER
Rule 6     expression -> STRING

Terminals, with rules where they appear

EQUALS               : 3
NUMBER               : 5
PRINT                : 1
STRING               : 6
VARNAME              : 3 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 3
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . PRINT expression
    (2) statement -> .
    (3) statement -> . VARNAME EQUALS expression

    PRINT           shift and go to state 1
    $end            reduce using rule 2 (statement -> .)
    VARNAME         shift and go to state 2

    statement                      shift and go to state 3

state 1

    (1) statement -> PRINT . expression
    (4) expression -> . VARNAME
    (5) expression -> . NUMBER
    (6) expression -> . STRING

    VARNAME         shift and go to state 4
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7

    expression                     shift and go to state 5

state 2

    (3) statement -> VARNAME . EQUALS expression

    EQUALS          shift and go to state 8


state 3

    (0) S' -> statement .



state 4

    (4) expression -> VARNAME .

    $end            reduce using rule 4 (expression -> VARNAME .)


state 5

    (1) statement -> PRINT expression .

    $end            reduce using rule 1 (statement -> PRINT expression .)


state 6

    (5) expression -> NUMBER .

    $end            reduce using rule 5 (expression -> NUMBER .)


state 7

    (6) expression -> STRING .

    $end            reduce using rule 6 (expression -> STRING .)


state 8

    (3) statement -> VARNAME EQUALS . expression
    (4) expression -> . VARNAME
    (5) expression -> . NUMBER
    (6) expression -> . STRING

    VARNAME         shift and go to state 4
    NUMBER          shift and go to state 6
    STRING          shift and go to state 7

    expression                     shift and go to state 9

state 9

    (3) statement -> VARNAME EQUALS expression .

    $end            reduce using rule 3 (statement -> VARNAME EQUALS expression .)

